[{"item_id": 21111776, "text": "As someone who recently worked in game dev I&#x27;m not sure why 32 bit was even a factor as 64 bit is likely your default target anyway - has been for awhile. So, killing 32 bit is not a real issue.<p>Notorizing can be seen as just another cost of targeting a platform. So do it. You will need at least one machine anyway to do basic testing on. So use that. Get the cheapest imac or whatever you require. So, mac hardware isn&#x27;t a real issue.<p>I found the statistics a bit strange as well. Sales were 2% linux, 4% mac, 94% windows. Yet support was divided 30% linux, 50% mac and 20% windows. This suggests linux is more problematic per sale than mac. Yet he has no issue with linux. If this was me, I&#x27;d be wanting to know exactly why linux&#x2F;mac was generating so many tickets. The answer will likely help the overall product.<p>Personally, you need to jump through so many hoops to release software that none of these thus far mentioned should be big enough to stop you. The real reasons should be: is there a demand in this target market; will that demand generate sufficient profit?<p>As I&#x27;m starting my own journey on this I see all the platforms and app stores have various issues. Everything has tradeoffs. The article&#x27;s author needs to come up with better arguments. I just don&#x27;t see his reasons as relevant in comparison to the other much larger costs associated with development.<p>I&#x27;d actually recommend targeting multiple platforms just to force bugs to come out. Different platforms &#x2F; compilers see and expose different issues in your codebase. So far I&#x27;m quite happy to have cross platform support even when i don&#x27;t necessarily release on those platforms yet.<p>I find art, sound and game assets are more expensive than an apple dev account or even a mac computer. Others have written in more detail on this. Even generic business costs exceed the subscription&#x2F;computer costs he&#x27;s stating as being barriers.", "by": "rs23296008n1"}, {"item_id": 21110615, "text": "Notarization and needing a paid developer account doesn&#x27;t change the requirement for running software on OSX relative to the previous version.<p>Before, you needed to sign with a &quot;developer ID distribution&quot; certificate if you wanted to avoid having to tell users to &quot;ctrl-click DMG then click open&quot; to bypass gatekeeper. This certificate required a paid developer account.<p>Now you can still distribute un-signed, un-notarized software and tell users to ctrl-click open to bypass gatekeeper. All this does is require notarization (Apple running malware analysis) to have it run without a ctrl-click.", "by": "judge2020"}, {"item_id": 21110630, "text": "Yikes. If you can&#x27;t figure out how to make your code 64-bit safe, or how to make code signing work, you are effective requiring your users to give you root access. Completely unacceptable for a game.", "by": "gok"}, {"item_id": 21110906, "text": "I certainly don&#x27;t blame the developer for not supporting macOS, but the reasoning he outlines in his post aren&#x27;t particularly compelling to me. It seems to me porting his game over to MacOS in itself would be a larger undertaking and more valid complaint than the ones he&#x27;s listed.<p>The notarization process potentially reducing the number of builds he can push to users in a day from 6 to something less seems like a feature, not a negative.", "by": "least"}, {"item_id": 21110685, "text": "the first commercial downloadable game I released back in 2015, that let me become a full-time indie developer, has done roughly 25% of its revenue over the last four years on Mac. This is adding together the % of copies sold on Steam for Mac users, and the Apple Mac Store, where my game was featured on the main page for three months. Notarization, and 64-bit support, and all that aside, the audience on Mac that you can sell to is massive, especially since a lot of developers just ignore the platform - I&#x27;m fully expecting to support as many macOS devices as I can for my next game.", "by": "DizzyDoo"}, {"item_id": 21110560, "text": "So the major points are dropping 32bit support and Apple forcing you to sign your executable? \nThe author claims that you need to pay Apple for the signing. as far as I know this is not true. You just need to pay for being on the application stores ...", "by": "kgarten"}, {"item_id": 21110595, "text": "64-bit support first arrived in Leopard in 2007. Everyone has had plenty of time.", "by": "Despegar"}, {"item_id": 21110574, "text": "I\u2019m glad Apple is locking down binaries. It\u2019s terrifying what malicious binaries are capable of.<p>For games in particular there should be better sand boxing options.", "by": "dickeytk"}, {"item_id": 21110691, "text": "&gt; Of course Mac support request ratios will vary by game due to architecture and player base, but there\u2019s little question that they\u2019re higher in general, ...<p>Why? What is the nature of these support requests? Are they specific to your game? Could it be because your game was not properly made for macOS to begin with?", "by": "pastastickers"}, {"item_id": 21110821, "text": "This article fails to address two key points that could significantly weaken its core arguments if answered. Those points and the questions that arise from each are:<p>1) Apple charges a flat rate of $100&#x2F;year for notarization access. Steam and Mac App Store take 15-30%. What additional percentage of Mac sales (either subscription and&#x2F;or one-time) is being spent on this annually by this developer?<p>$100&#x2F;year &amp; 100 units&#x2F;year = $1.00&#x2F;unit<p>$100&#x2F;year &amp; 1000 units&#x2F;year = $0.10&#x2F;unit<p>$100&#x2F;year &amp; 10000 units&#x2F;year = $0.01&#x2F;unit<p>EDIT: Steam indicates that this game has sold 0-20,000 units (max 168 concurrent players), between May 2015 and September 2019, so using a straight flatline average of the best-case scenario for sales, the cost to date per unit is:<p>$500&#x2F;5y &amp; 23000 units&#x2F;5y = $0.22&#x2F;unit<p>2) Notarization can be added to command-line build scripts and Makefiles and third-party processes, so that it is simple to ensure that builds are notarized as part of releases to Steam. What, if any, engineering obstacles in the developer\u2019s build process blocked this integration?\n <a href=\"https:&#x2F;&#x2F;developer.apple.com&#x2F;documentation&#x2F;xcode&#x2F;notarizing_your_app_before_distribution&#x2F;customizing_the_notarization_workflow\" rel=\"nofollow\">https:&#x2F;&#x2F;developer.apple.com&#x2F;documentation&#x2F;xcode&#x2F;notarizing_y...</a>", "by": "floatingatoll"}, {"item_id": 21110588, "text": null, "by": null}, {"item_id": 21110559, "text": "Does Apple have to sign games distributed through Steam? I thought that only applied to their own app store.", "by": "wjdp"}, {"item_id": 21110537, "text": "why is dropping 32-bit support even a consideration?", "by": "tmaly"}, {"item_id": 21110662, "text": "Seriously, OS X went 64bit 12 <i>years</i> ago. X86 has been 64bit for longer.<p>Maybe, just maybe, the problem is developers refusing to actually move forward.<p>It\u2019s especially galling given game devs are the group that most prominently complains about OS X being behind the times.<p>As for \u201cneedlessly\u201d dropping 32bit: if your poorly written 32bit app starts up you necessarily force OS X (and the user\u2019s machine) to pull in 32bit variants of almost the entire platform. Thanks for that. It also means Apple has to maintain 32bit versions of every framework. I can speak from experience here: maintaining a 32bit version of javascriptcore was a massive amount of work. Every new JS feature needs duplicated JIT work, and needlessly complicates the entire JSC codebase.<p>That aside, Apple manages to do this - and I can\u2019t imagine your game approaches the complexity of an entire OS -so if you can\u2019t make your software work on a 64bit system then the problem is your code, not Apple.", "by": "olliej"}]