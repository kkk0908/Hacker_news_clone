[{"item_id": 21108936, "text": "I&#x27;ll have to work through this when I get the time.<p>I started teaching myself Haskell for fun about a year and a half ago, and ended up going down a rabbit hole of formal logic, set theory, mathematical foundations etc. which I did not expect at all; I&#x27;m currently spending some time looking at algebraic topology to give me a grounding to go into homotopy type theory.<p>For anyone else with an interests in this area, I&#x27;d strong urge you to look at some of the work from Kevin Buzzard (Imperial College), perhaps better known as an algebraic number theorist, who leads the Xena [1] Project, which started as an attempt to completely formalise all the problem sheets for one of the undergraduate maths modules at Imperial in Lean. There&#x27;s also a GitHub repo [2] with a lot of work to build on.<p>Adam Chlipala (MIT) also teaches a course in formal program verification in Coq based on his book [3] which is a valuable resource.<p>1: <a href=\"https:&#x2F;&#x2F;xenaproject.wordpress.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;xenaproject.wordpress.com&#x2F;</a><p>2: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;kbuzzard&#x2F;xena\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;kbuzzard&#x2F;xena</a><p>3: <a href=\"http:&#x2F;&#x2F;adam.chlipala.net&#x2F;frap&#x2F;\" rel=\"nofollow\">http:&#x2F;&#x2F;adam.chlipala.net&#x2F;frap&#x2F;</a>", "by": "p0llard"}, {"item_id": 21108868, "text": "Here&#x27;s the HTML version of the same thing:<p><a href=\"https:&#x2F;&#x2F;leanprover.github.io&#x2F;theorem_proving_in_lean&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;leanprover.github.io&#x2F;theorem_proving_in_lean&#x2F;</a>", "by": "traderjane"}, {"item_id": 21111180, "text": "A discussion from last year: <a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=17171101\" rel=\"nofollow\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=17171101</a>", "by": "dang"}, {"item_id": 21110932, "text": "has anybody proved something interesting in Lean? Perhaps not too difficult, but some proposition that might take a couple of days of work done in hours? I&#x27;m all for encoding foundations in a programmatic framework, but it seems that the idea here is to make this a useful tool for practicing mathematicians. The documentation didn&#x27;t seem to have any examples of how that might happen.", "by": "comnetxr"}, {"item_id": 21108985, "text": "Why learn Lean as written in the book when there is no way of knowing how much of it will be obsolete in Lean 4, which is being developed in private?", "by": "iso-8859-1"}, {"item_id": 21110464, "text": "As someone who&#x27;s never used Lean, but has played around with Coq and Agda, how do they compare?", "by": "TheAsprngHacker"}]