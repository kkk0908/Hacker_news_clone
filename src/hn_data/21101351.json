[{"item_id": 21102881, "text": "&gt; It is somewhat puzzling that the C++ language does not see fit to make it easy to compute the full product between two integers.<p>Perhaps, but certainly not surprising.<p>This is the same language where you can&#x27;t even have signed overflow without nasal demons.<p>---<p>Anyway, this would be a slow, standard way (not sure about best way to calculate base).<p><pre><code>   &#x2F;&#x2F; big-endian array result\n   std::array&lt;Int, 2&gt; multiply&lt;class Int = int&gt;(Int x, Int y) {\n     &#x2F;&#x2F; assumes radix 2, and even number of digits\n     int base = 1 &lt;&lt; std::numeric_limits&lt;IntType&gt;::digits &#x2F; 2;\n\n     Int x_1 = x % base, x_2 = x &#x2F; base;\n     Int y_1 = y % base, y_2 = x &#x2F; base;\n\n     Int z_11 = x_1 * y_1;\n     Int z_12 = x_1 * y_2;\n     Int z_21 = x_2 * y_2;\n     Int z_22 = x_2 * y_2;\n\n     return {\n       z_11 + z_12 % base + z_21 % base,\n       z_22 + z_12 &#x2F; base + z_22 &#x2F; base\n     }\n   }</code></pre>", "by": "paulddraper"}, {"item_id": 21103099, "text": "Would it not be possible to reuse that value?<p><pre><code>    -uint64_t(__uerange) % uint64_t(__uerange)</code></pre>", "by": "29athrowaway"}]