[{"item_id": 21104061, "text": "While this discussion boils down to the efficiency of the underlying regex engines for PHP and Rust, it does highlight (to me) why PHP is so popular: in the hands of average programmers, PHP is quick to write and fast (enough) to execute.<p>I personally believe it&#x27;s ubiquity is well-deserved, and I actually like it as a language despite all its quirks (which exist in almost every language I&#x27;ve come across)!", "by": "osrec"}, {"item_id": 21104017, "text": "This is a little silly.  The two programs are so simple that it&#x27;s probably just testing the speed of the regex engines used by the two languages.  Since PHP uses PCRE (a C library that has been around for quite a long time), you&#x27;d expect it to be fast.  I&#x27;m impressed that marshaling back and forth across the FFI boundary isn&#x27;t causing more slowness, but perhaps it is, and the real issue is that rust&#x27;s regex engine is just painfully slow.<p>The only way to know for sure would be to profile each bit to see what dominates: the file I&#x2F;O?  The regex matching?  The FFI?  The printing to stdout?<p>Also, looks like there is a rust wrapper for PCRE[0]; might be interesting to try it to get a more apples-to-apples comparison.<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;cadencemarseille&#x2F;rust-pcre\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;cadencemarseille&#x2F;rust-pcre</a>", "by": "kelnos"}, {"item_id": 21104013, "text": "The top reply says &quot;Don&#x27;t underestimate PHP when regexes are involved.&quot; and linked a benchmark [1].<p>But in that benchmark apparently Rust is faster than PHP (The slowest &quot;Rust #2&quot; is 2.45 sec. while PHP is 2.80 sec. He also mentioned &quot;PCRE&quot;, but the ones with Perl in name are even much more slower [the fastest being 14.95 sec.]).<p>Did I miss his point by linking that benchmark, or did I interpret the benchmark wrong?<p>[1]: <a href=\"https:&#x2F;&#x2F;benchmarksgame-team.pages.debian.net&#x2F;benchmarksgame&#x2F;performance&#x2F;regexredux.html\" rel=\"nofollow\">https:&#x2F;&#x2F;benchmarksgame-team.pages.debian.net&#x2F;benchmarksgame&#x2F;...</a>", "by": "fireattack"}, {"item_id": 21104086, "text": "I believe the Rust Regex Unicode support is opt-out, where as in PHP it is opt-in. Might make a significant difference.", "by": "jononor"}, {"item_id": 21104054, "text": "Random guess:<p>There will be some difference in the regex engine speed, because PCRE is very fast in common cases.<p>But doing a single regex match is not that much work, so it probably boils down to I&#x2F;O.<p>And PHP might use extra buffering to get better throughput for the common &quot;stream a file&quot; scenario.<p>Similar question with Python being faster than C++:<p><a href=\"https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;9371238&#x2F;why-is-reading-lines-from-stdin-much-slower-in-c-than-python\" rel=\"nofollow\">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;9371238&#x2F;why-is-reading-l...</a>", "by": "chubot"}, {"item_id": 21105412, "text": "Obviously, because the PHP regex engine is written in C, not in PHP. It&#x27;s more like Rust&#x27;s regex crate vs C PCRE rather than PHP, or who calls system call faster. While Rust&#x27;s IO is locked[1] and doesn&#x27;t buffer (which is slower than buffered, unsynchronized IO like other languages). And regex crate is slow when capturing, which is used on the &quot;benchmark&quot;.<p>Reference: <a href=\"https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;5zit0e&#x2F;regex_captures_slow_compared_to_python&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;5zit0e&#x2F;regex_captures...</a>\n2 years ago, but it&#x27;s still valid to me, I&#x27;ve just tested it and it&#x27;s much slower as I expected.\nFeel free to correct me if I&#x27;m wrong :)<p>[1]: <a href=\"https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;io&#x2F;fn.stdout.html\" rel=\"nofollow\">https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;io&#x2F;fn.stdout.html</a>", "by": "nicklauri"}, {"item_id": 21104304, "text": "When you use any functions or classes any of the PHP standard library, the underlying implementation is usually in C.", "by": "aussieguy1234"}, {"item_id": 21104131, "text": "I maybe wrong but rust uses a dfa regex engine, while pcre uses backtracking. So in theory rust&#x27;s regex engine should be faster...", "by": "UK-Al05"}, {"item_id": 21104568, "text": "Theory.<p>The php script and the log in question are probably in the kernel&#x27;s aggressive block layer cache. The new files created by rust are potentially new and uncached, mean that it must be loaded from disk. Therefore the rust version is probably just losing time on disk access.<p>Quick test: review whether or not the rust version runs faster on the second execution.<p>Also or alternatively: use a profiler or copy the rust program to an in-memory block device (ramdisk) prior to access.", "by": "contingencies"}, {"item_id": 21108059, "text": "Regarding the slowness of Go in the benchmarks linked in the article, <a href=\"https:&#x2F;&#x2F;medium.com&#x2F;@dgryski&#x2F;speeding-up-regexp-matching-with-ragel-4727f1c16027\" rel=\"nofollow\">https:&#x2F;&#x2F;medium.com&#x2F;@dgryski&#x2F;speeding-up-regexp-matching-with...</a>.<p>There are tradeoffs with PCRE vs RE2 instead of just raw speed.", "by": "alephnan"}, {"item_id": 21104058, "text": "Rust doesn&#x27;t make an average code implementation fast. Even naive mistakes like buffering &#x2F; allocation make things really slow.", "by": "Thaxll"}, {"item_id": 21103538, "text": "This is an interesting discussion. It seems that it&#x27;s possible for i&#x2F;o to be slow in Rust, and the PHP regex engine may be very good....", "by": "fortran77"}, {"item_id": 21104011, "text": "This code is mostly just testing the regex engine?", "by": "ericmcer"}]